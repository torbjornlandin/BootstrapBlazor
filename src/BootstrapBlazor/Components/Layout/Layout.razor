@namespace BootstrapBlazor.Components
@inherits LayoutBase

<CascadingValue Value="this" IsFixed="true">
    @if (IsInit)
    {
        <ErrorLogger OnErrorHandleAsync="OnErrorHandleAsync!">
            @if (IsAuthenticated)
            {
                <section @attributes="AdditionalAttributes" class="@ClassString">
                    @if (Side == null)
                    {
                        @RenderHeader.Invoke(false)
                        @RenderMain
                        @if (ShowFooter)
                        {
                            @RenderFooter
                        }
                    }
                    else if (IsFullSide)
                    {
                        <aside class="@SideClassString" style="@SideStyleString">
                            @Side
                            @if (Menus != null)
                            {
                                @RenderMenu.Invoke(IsFullSide)
                            }
                        </aside>
                        <section class="layout-right">
                            @RenderHeader.Invoke(ShowCollapseBar)
                            @RenderMain
                            @if (ShowFooter)
                            {
                                @RenderFooter
                            }
                        </section>
                    }
                    else
                    {
                        @RenderHeader.Invoke(ShowCollapseBar);
                        <section class="has-sidebar">
                            <aside class="@SideClassString" style="@SideStyleString">
                                @Side
                                @if (Menus != null)
                                {
                                    @RenderMenu.Invoke(IsFullSide)
                                }
                            </aside>
                            @RenderMain
                        </section>
                        @if (ShowFooter)
                        {
                            @RenderFooter
                        }
                    }
                </section>
            }
            else if (NotAuthorized != null)
            {
                @NotAuthorized
            }
            else
            {
                @Main
            }
        </ErrorLogger>
    }
</CascadingValue>

@code {
    RenderFragment<bool> RenderHeader => collapse =>
    @<header class="@HeaderClassString">
        @if (collapse)
        {
            <a title="" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="@TooltipText" class="@CollapseBarClassString" @onclick="CollapseMenu">
                <i class="fa fa-bars"></i>
            </a>
        }
        @Header
    </header>;

RenderFragment<bool> RenderMenu => hasScroll =>
@<div class="layout-menu">
    @if (hasScroll)
    {
        <Scroll>
            <Menu Items="@Menus" IsVertical="true" IsCollapsed="@IsCollapsed" IsAccordion="@IsAccordion" OnClick="@ClickMenu()" />
        </Scroll>
    }
    else
    {
        <Menu Items="@Menus" IsVertical="true" IsCollapsed="@IsCollapsed" IsAccordion="@IsAccordion" OnClick="@ClickMenu()" />
    }
</div>;

RenderFragment RenderMain =>
@<main class="@MainClassString">
    @if (UseTabSet)
    {
        <RenderTemplate>
            <Tab ClickTabToNavigation="true" ShowExtendButtons="true" ShowClose="true"
                 AdditionalAssemblies="@AdditionalAssemblies" NotFoundTabText="@NotFoundTabText"
                 DefaultUrl="@TabDefaultUrl" ExcludeUrls="@ExcludeUrls" IsOnlyRenderActiveTab="IsOnlyRenderActiveTab"
                 ShowToast="ShowToast" ToastTitle="@ToastTitle" OnErrorHandleAsync="OnErrorHandleAsync!"
                 Body="@Main" NotAuthorized="NotAuthorized!" NotFound="NotFound!" />
        </RenderTemplate>
    }
    else
    {
        @Main
    }
</main>;

RenderFragment RenderFooter =>
@<footer class="@FooterClassString">
    @Footer
    @if (ShowGotoTop)
    {
        <GoTop />
    }
</footer>;
}
